@model List<ADOAnalyser.Controllers.BuildController.BuildDefinition>
@{
    ViewData["Title"] = "Build";
}
<section id="builds" class="content">
    <div class="header" style="font-weight:bold">Pipelines</div>
    <div class="row mb-3">
        <div class="col-md-12 d-flex flex-row">
            <div class="form-label">Select Release:</div>
        </div>
        <div class="col-md-12 d-flex flex-row">
            <select id="pipelineFilter" class="selectpicker form-control">
                @foreach (var pipeline in Model)
                {
                    <option style="text-transform: capitalize" value="@pipeline.Id">
                        @pipeline.Name
                    </option>
                }
            </select>
        </div>
    </div>
    <div id="workItemsTable">
    </div>

    <div id="loader" style="display: none;justify-items:center">
        <div class="spinner"></div>
    </div>
</section>

<script>   
$(document).ready(function () {
    const dropdown = document.getElementById("pipelineFilter");

    const definitionId = dropdown.options[0].value;
    loadGrid(definitionId);
});
$(document).on('change', '#pipelineFilter', function () {
    const definitionId = this.value;
    loadGrid(definitionId);
});

function loadGrid(definitionId){
    $('#workItemsTable').html("");
    $("#loader").show();
    definitionId = definitionId;
    $.ajax({
        url: '/Build/GetBuildDetails',
        type: 'GET',
        data: { definitionId: definitionId },
        success: function (result) {
            $('#workItemsTable').html(result);
        },
        error: function () {
            alert('Error loading partial view.');
        },
        complete: function () {
            // Hide the loader after the request completes
            $("#loader").hide();
        }
    });
}
</script>
@model ADOAnalyser.Models.SprintViewModel
@{
    ViewData["Title"] = "DashBoard";
}
<section id="dashboard" class="content">
    <div class="header">DevOps ADO Item Verification Dashboard</div>
    <div class="row mb-3">
        <div class="col-md-12 d-flex flex-row">
            <select id="sprintDashBoardFilter" class="selectpicker form-control">
                @foreach (var sprint in Model.AllSprints)
                {
                    <option value="@sprint" selected="@(sprint == Model.SelectedSprint ? "selected" : null)">
                        @sprint
                    </option>
                }
            </select>
        </div>
    </div>
@*     <div class="row mb-3">
        <div class="col-md-12 mb-12 ">
            <i class="fa fa-bar-chart float-md-end"></i>
            <i class="fa fa-table float-md-end"></i>
        </div>
    </div> *@
    <div class="row">
        <div class="col-md-4 mb-4">
            <div class="card">
                <a class="loadData" name="IAStatus" style="text-decoration:none;cursor:pointer">
                    <div class="card-body"><h3>Impact Assessment Issues</h3><p class="badge">@Model.WorkItemData.missingIACount</p></div>
                </a>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card">
                <a class="loadData" name="RootCauseStatus" style="text-decoration:none;cursor:pointer">
                    <div class="card-body"><h3>Root Cause Missing</h3><p class="badge">@Model.WorkItemData.missingRootCauseCount</p></div>
                </a>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card">
                <a class="loadData" name="ProjectZeroStatus" style="text-decoration:none;cursor:pointer">
                    <div class="card-body"><h3>Project Zero Not Filled</h3><p class="badge">@Model.WorkItemData.missingProjectZeroCount</p></div>
                </a>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card">
                <a class="loadData" name="PRLifeCycleStatus" style="text-decoration:none;cursor:pointer">
                    <div class="card-body"><h3>PR Lifecycle Incomplete</h3><p class="badge">@Model.WorkItemData.missingPRLifeCycleCount</p></div>
                </a>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card">
                <a class="loadData" name="StatusDiscrepancyStatus" style="text-decoration:none;cursor:pointer">
                    <div class="card-body"><h3>Status Discrepancies</h3><p class="badge">@Model.WorkItemData.missingStatusDiscreCount</p></div>
                </a>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card">
                <a class="loadData" name="TestCaseGapeStatus" style="text-decoration:none;cursor:pointer">
                    <div class="card-body"><h3>Test Case Gaps</h3><p class="badge">@Model.WorkItemData.missingTestCaseCount</p></div>
                </a>
            </div>
        </div>
    </div>
@*     <div class="row" id="chartContainer"></div> *@
    <div id="workItemsTable">
    </div>

    <div id="loader" style="display: none;justify-items:center">
        <div class="spinner"></div>
    </div>

</section>
@* <script>
window.onload = function () {

//Better to construct options first and then pass it as a parameter
var options = {
	title: {
            text: "Verification Chart"
        },
	data: [              
	{
		// Change type to "doughnut", "line", "splineArea", etc.
		type: "pie",
		dataPoints: [
                { label: "Impact Assessment Issues",  y: 10  },
                { label: "Root Cause Missing", y: 15  },
                { label: "Project Zero Not Filled", y: 25  },
                { label: "PR Lifecycle Incomplete",  y: 30  },
                { label: "Status Discrepancies",  y: 28  },
                { label: "Test Case Gaps",  y: 28  }
		]
	}
	]
};

$("#chartContainer").CanvasJSChart(options);
}
</script> *@

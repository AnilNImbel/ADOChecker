@model ADOAnalyser.Models.WorkItemModel

@if (Model.value != null && Model.value.Any() && (Model.showCSV || Model.showTotalCount))
{
    <div class="row mb-2">
        @if (Model.showTotalCount)
        {
            <div class="col-md-6">
                <label class="form-label header" style="margin-bottom:10px;font-size:20px">Total Work Items : @Model.count</label>
            </div>
        }
        @if (Model.showCSV)
        {
            string controllerName = @Model.controllerName ?? "test";
            <div class="@(Model.showTotalCount ? "col-md-6" : "col-md-12")">
                <a onclick="downloadWorkItmeAsCSV('workItemTable','@controllerName')" style="margin-right:5px;float: right;" class="btn btn-primary btn-sm">
                Download CSV
            </a>
        </div>
        }
    </div>
}

<div class="row">
    <div class="col-md-12 table-responsive">
        <table id="workItemTable" class="table table-hover">
            <thead>
                <tr>
                    <th>Work Item Type</th>
                    <th>ID</th>
                    <th>Impact Assessment</th>
                    <th>Root Cause</th>
                    <th>Project Zero</th>
                    <th>PR Lifecycle</th>
                    <th>Status Discrepancy</th>
                    <th>Test Case</th>
                    <th>VTD</th>
                    <th>VLBD/VED</th>
                    <th>Assigned To</th>
                    <th>State</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.value != null && Model.value.Any())
                {
                    foreach (var project in Model.value)
                    {
                        string SystemAssignedTo = @project.fields.SystemAssignedTo == null ? string.Empty : @project.fields.SystemAssignedTo.Split('<')[0].Trim();
                        <tr>
                            <td>@project.fields.SystemWorkItemType</td>
                            <td><a href="https://civica-cp.visualstudio.com/CE/_workitems/edit/@project.id" target="_blank">@project.id</a></td>
                            <td class="@project.fields.IAStatus">@project.fields.IAStatus</td>
                            <td class="@project.fields.RootCauseStatus">@project.fields.RootCauseStatus</td>
                            <td class="@project.fields.ProjectZeroStatus">
                                <span class="@(project.fields.ProjectZeroStatus == "Missing" ? "clickable" : string.Empty)" projectZero="@project.fields.ProjectZeroStatus" why1="@project.fields.CustomRootCauseAnalysisWhy1" why2="@project.fields.CustomRootCauseAnalysisWhy2" why3="@project.fields.CustomRootCauseAnalysisWhy3" owner="@project.fields.CustomRemediationOwner">
                                    @project.fields.ProjectZeroStatus
                                </span>
                            </td>
                            <td class="@project.fields.PRLifeCycleStatus">
                                <span class="@(project.fields.PRLifeCycleStatus == "Missing" ? "clickable" : string.Empty)" prlifeCycle="@project.fields.PRLifeCycleStatus" demo="@project.fields.CustomVIEWPRCompletedDemo" signedOff="@project.fields.CustomSignedOffBy" unitTest="@project.fields.CustomVIEWPRManualUnitTestCount" analysisHours="@project.fields.CustomVIEWPRImpactAnalysisHours" actualHours="@project.fields.CustomVIEWPRActualEffortHours">
                                    @project.fields.PRLifeCycleStatus
                                </span>
                            </td>
                            <td class="@project.fields.StatusDiscrepancyStatus">@project.fields.StatusDiscrepancyStatus</td>
                            <td>@Html.Raw(@project.fields.TestCaseGapeHTML)</td>
                            <td class="@project.fields.VTDMissingStatus">@project.fields.VTDMissingStatus</td>
                            <td class="@project.fields.VLDBMissingStatus">@project.fields.VLDBMissingStatus</td>
                            <td>@SystemAssignedTo</td>
                            <td>@project.fields.SystemState</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="12" class="text-center">No work items found for this sprint.</td>
                    </tr>
                }
           
            </tbody>
        </table>
    </div>
</div>

<script>
       function downloadWorkItmeAsCSV(tableId, controllerName) {
        const table = document.getElementById(tableId);
        let csv = [];

        for (let row of table.rows) {
            let rowData = [];
            for (let cell of row.cells) {
                let cellText = cell.innerText;

                // Replace logic based on field name and value
                const header = table.rows[0].cells[cell.cellIndex].innerText.trim();
                if (header === "Test Case") {
                    if (cellText.trim() === "No Test case Attached") {
                        cellText = "Missing";
                    } else if (cellText.trim() === "Missing Details") {
                        cellText = "Missing";
                    }
                    else if(cellText.trim() === "All fields updated"){
                         cellText = "Updated";
                    }
                }

                rowData.push('"' + cellText.replace(/"/g, '""') + '"');
            }
            csv.push(rowData.join(','));
        }

        const csvContent = csv.join('\n');
        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
        const link = document.createElement('a');

        const now = new Date();
        const timestamp = now.toISOString().replace(/[-:T.Z]/g, '').slice(0, 14); // yyyyMMddHHmmss
        const filename = controllerName +`_${timestamp}.csv`;

        link.href = URL.createObjectURL(blob);
        link.download = filename;
        link.style.display = 'none';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }

</script>


